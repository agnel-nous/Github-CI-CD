# This workflow will build a MuleSoft project and deploy to CloudHub

name: Release pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    
    - uses: actions/checkout@v2
    
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
    - name: Print effective-settings (optional)
      run: mvn help:effective-settings
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    
    - name: Upload artifact 
      uses: actions/upload-artifact@master
      with:
          name: artifacts
          path: target/*.jar
        
  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    environment: dev

    steps:    
    
    - uses: actions/checkout@v2
    
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - uses: actions/download-artifact@master
      with:
        name: artifacts
    
    - name: Deploy to Dev
      env:
        USERNAME: ${{ secrets.USERNAME }}
        PASSWORD: ${{ secrets.PASSWORD }}
        MULEVERSION: ${{ secrets.MULEVERSION }}
        WORKERTYPE: ${{ secrets.WORKERTYPE }}
        WORKERS: ${{ secrets.WORKERS }}
        ENV: ${{ secrets.ENV_DEV }}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -DmuleDeploy \
         -Dmule.artifact=$artifactName \
         -Danypoint.username="$USERNAME" \
         -Danypoint.password="$PASSWORD" \
         -DmuleVersion="$MULEVERSION"\
         -DworkerType="$WORKERTYPE"\
         -Dworkers="$WORKERS"\
         -Denv="$ENV"\
         -DskipTests
         
  deploy-uat:
     needs: build
     runs-on: ubuntu-latest
     environment: uat
     
     steps:
     - uses: actions/checkout@v2
    
     - uses: actions/cache@v1
       with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
     - uses: actions/download-artifact@master
       with:
        name: artifacts
     - name: Deploy to Uat
       env:
        USERNAME: ${{ secrets.USERNAME }}
        PASSWORD: ${{ secrets.PASSWORD }}
        MULEVERSION: ${{ secrets.MULEVERSION }}
        WORKERTYPE: ${{ secrets.WORKERTYPE }}
        WORKERS: ${{ secrets.WORKERS }}
        ENV: ${{ secrets.ENV_UAT }}
       run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -DmuleDeploy \
         -Dmule.artifact=$artifactName \
         -Danypoint.username="$USERNAME" \
         -Danypoint.password="$PASSWORD" \
         -DmuleVersion="$MULEVERSION"\
         -DworkerType="$WORKERTYPE"\
         -Dworkers="$WORKERS"\
         -Denv="$ENV"\
         -DskipTests
         
  deploy-prod:
      needs: build
      runs-on: ubuntu-latest
      environment: prod
      
      steps:
      - uses: actions/checkout@v2
    
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
    
      - uses: actions/download-artifact@master
        with:
          name: artifacts
      - name: Deploy to Prod
        env:
         USERNAME: ${{ secrets.USERNAME }}
         PASSWORD: ${{ secrets.PASSWORD }}
         MULEVERSION: ${{ secrets.MULEVERSION }}
         WORKERTYPE: ${{ secrets.WORKERTYPE }}
         WORKERS: ${{ secrets.WORKERS }}
         ENV: ${{ secrets.ENV_PROD }}
        run: |
         artifactName=$(ls *.jar | head -1)
         mvn deploy -DmuleDeploy \
          -Dmule.artifact=$artifactName \
          -Danypoint.username="$USERNAME" \
          -Danypoint.password="$PASSWORD" \
          -DmuleVersion="$MULEVERSION"\
          -DworkerType="$WORKERTYPE"\
          -Dworkers="$WORKERS"\
          -Denv="$ENV"\
          -DskipTests
